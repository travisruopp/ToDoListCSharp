@model IEnumerable<ToDoList.Models.ToDoModel>

@{
    ViewData["Title"] = "Index";
}

<h1>To Do List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form method="get" asp-controller="ToDo" asp-action="Index">
    <div class="form-group">
        <label for="priority">Priority:</label>
        <select id="priority" name="priority" class="form-control">
            <option value="">All</option>
            <option value="High">High</option>
            <option value="Medium">Medium</option>
            <option value="Low">Low</option>
        </select>
    </div>
    <div class="form-group">
        <label for="status">Status:</label>
        <select id="status" name="status" class="form-control">
            <option value="">All</option>
            <option value="true">Completed</option>
            <option value="false">Not Completed</option>
        </select>
    </div>
    <label for="category">Category:</label>
    <select id="category" name="category" class="form-control" asp-items="ViewBag.CategoryList">
        <option value="">All</option>
        <option value="Work">Work</option>
        <option value="Personal">Personal</option>
        <option value="Shopping">Shopping</option>
        <option value="Others">Others</option>
    </select>
    <div class="form-group">
        <label for="searchString">Search:</label>
        <input type="text" id="searchString" name="searchString" class="form-control" placeholder="Search by description" />
    </div>
    <div class="form-group">
        <input type="submit" value="Filter" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Clear</a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var isOverdue = item.DueDate < DateTime.Now;
            var overdueClass = isOverdue ? "text-danger" : "";
            <tr class="@overdueClass">
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    <a href="javascript:void(0);" onclick="document.getElementById('toggleStatusForm-@item.Id').submit();">
                        @(item.Status ? "Mark Incomplete" : "Mark Complete")
                    </a>
                    <form id="toggleStatusForm-@item.Id" asp-action="ToggleStatus" asp-route-id="@item.Id" method="post" style="display:none;"></form>
                </td>
            </tr>
        }
    </tbody>
</table>

